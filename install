#!/bin/bash
# Dotfiles install script

# Use this script to install the dotfiles either locally (default) or remotely to the given user and host.

# Synopsis
# install [-R [user@]host]

install_mode='local'

while getopts "fR:" Option
do
  case $Option in
    f ) force_install=1;;  # Force install. (Do a backup of 'old' files before install)
    R ) install_mode='remote'; remote_host=$OPTARG;;   # Specify remote user and host
    * ) echo "Usage: `basename $0` [-R [user@]host]";; # DEFAULT
  esac
done

# Force install / Backup files
function backup_files () {
  echo 'Force install. Old files will be moved to ~/.dotfiles_bak'
  if [[ ! -d ~/.dotfiles_bak ]]; then
    echo 'Creating .dotfiles_bak directory'
    mkdir ~/.dotfiles_bak
    if [[ $? -gt 0 ]]; then
      exit_with_error 'Error creating ~/.dotfiles_bak directory'
    fi
  fi
  if [[ -e ~/.bashrc ]]; then
    echo 'Backuping ~/.bashrc'
    mv ~/.bashrc ~/.dotfiles_bak
    if [[ $? -gt 0 ]]; then
      exit_with_error 'Error moving ~/.bashrc to ~/.dotfiles_bak'
    fi
  fi
  if [[ -e ~/.bash_profile ]]; then
    echo 'Backuping ~/.bash_profile'
    mv ~/.bash_profile ~/.dotfiles_bak
    if [[ $? -gt 0 ]]; then
      exit_with_error 'Error moving ~/.bash_profile to ~/.dotfiles_bak'
    fi
  fi
}

# Pre-install check
function do_preflight () {
  echo 'Doing preflight check...'
  manifest=(~/.bashrc ~/.bash_profile)
  for file in ${manifest[@]}
  do
    if [[ -e $file ]]; then
      echo "${file} exists"
      preflight_failed=1
    fi
  done
  
  if [[ $preflight_failed ]]; then
    echo 'Install aborted!'
    echo 'Use ./install -f to force install. Old files will be backuped.'
    return 1
  else
    return 0
  fi
}

# Local install
function do_local_install () {
  if [[ ! -d ~/bin ]]; then
    echo "Creating ~/bin directory"
    mkdir ~/bin
    if [[ $? -gt 0 ]]; then
      exit_with_error 'Error creating ~/bin directory'
    fi
  fi
  if [[ -e ~/bin/vcprompt ]]; then
    echo 'Seems that vcprompt is already installed. Skipping'
  else
    echo 'Copying vcprompt binary to ~/bin'
    cp bin/vcprompt ~/bin/vcprompt
    if [[ $? -gt 0 ]]; then
      exit_with_error 'Error copying vcprompt binary'
    fi
  fi
  echo 'Symlinking .bash_profile'
  ln -s ~/.dotfiles/bash_profile ~/.bash_profile
  if [[ $? -gt 0 ]]; then
    exit_with_error 'Error symlinking .bash_profile'
  fi
  echo 'Symlinking .bashrc'
  ln -s ~/.dotfiles/bashrc ~/.bashrc
  if [[ $? -gt 0 ]]; then
    exit_with_error 'Error symlinking .bashrc'
  fi
  echo 'Dotfiles installed successfully!'
  echo 'To load your new environment, use this command: $ source ~/.bashrc'
}

# TODO: Remote install script

function exit_with_error () {
  echo $1
  echo 'Install failed!'
  exit 1
}

# - - - - - - - - - - -

case $install_mode in
  'local' )
    if [[ $force_install -eq 1 ]]; then
      backup_files
    fi
    do_preflight
    if [[ $? -eq 0 ]]; then
      do_local_install
    fi
  ;;
  'remote' )
    echo 'Not implemented yet'
  ;;
esac

exit 0
